---

stages:
- lint-stage
- build-stage
- test-stage
- publish-stage

variables:
  UNIV_DOCKERHUB_MIRROR: artifacts.knut.univention.de
  UNIV_DOCKERHUB_CACHE: ${UNIV_DOCKERHUB_MIRROR}/dockerhub_proxy_cache/
  UPX_IMAGE_REGISTRY: ${UNIV_DOCKERHUB_MIRROR}/upx/
  DOCKER_TLS_CERTDIR: ''
  DOCKER_HOST: tcp://docker:2375

  DOCKER_COMPOSE_PRODUCTION_FILES:
    --file docker-compose.yaml
    --file docker-compose.prod.yaml

  DOCKER_COMPOSE_BUILD_FILES:
    ${DOCKER_COMPOSE_PRODUCTION_FILES}
    --file docker-compose.override.yaml

default:
  before_script:
  - mkdir "$HOME/.docker/"
  - echo "$DOCKER_AUTH_CONFIG" > "$HOME/.docker/config.json"

pre-commit-job:
  stage: lint-stage
  image:
    name: ${UPX_IMAGE_REGISTRY}container-pre-commit/pre-commit:latest
    entrypoint: [/bin/bash, -c]
  variables:
    PIP_CACHE_DIR: ${CI_PROJECT_DIR}/.cache/pip
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  cache:
    paths:
    - .cache/pip
    - .cache/pre-commit
    - venv/
  script:
  # The image currently supplies version 21.1.2
  - /venv/bin/python -m pip install --upgrade pip==21.1.3
  # pip/ruamel.yaml.clib depends on
  #   gcc to compile test_ruamel_yaml.c
  #   Scrt1.o and crti.o from musl-dev
  #   Python.h from python3-dev
  - apk add --no-cache gcc musl-dev python3-dev
  # Compose lint would fail without the referenced env files
  - cp .env.listener.example .env.listener
  - pre-commit run --all-files

build-job:
  image:
    ${UPX_IMAGE_REGISTRY}docker/compose:1.30-debian-buster-python-3.7.3
  stage: build-stage
  tags:
  - docker
  services:
  - name: ${UNIV_DOCKERHUB_CACHE}library/docker:20.10.7-dind
    alias: docker
    command:
    - "--insecure-registry=artifacts.knut.univention.de"
    - "--tls=false"
  script:
  - apt-get update
  - apt-get --assume-yes --verbose-versions --no-install-recommends install python3-sh
  - python3 ci-build-script.py

test-job:
  image:
    ${UPX_IMAGE_REGISTRY}docker/compose:1.30-debian-buster-python-3.7.3
  stage: test-stage
  tags:
  - docker
  services:
  - name: ${UNIV_DOCKERHUB_CACHE}library/docker:20.10.7-dind
    alias: docker
    command:
    - "--insecure-registry=artifacts.knut.univention.de"
    - "--tls=false"
  script:
  - cp .env.listener.example .env.listener
  - cp "${LDAP_SECRET}" secret/ldap.secret
  - docker-compose ${DOCKER_COMPOSE_PRODUCTION_FILES} pull
  - docker-compose ${DOCKER_COMPOSE_PRODUCTION_FILES} up --detach --no-build
  - echo "TODO test here"
  - docker-compose ${DOCKER_COMPOSE_PRODUCTION_FILES} down
  - docker-compose ${DOCKER_COMPOSE_PRODUCTION_FILES} rm
  artifacts:
    when: always
    expire_in: 4 weeks
    reports:
      junit: integration-test/robot_results/xunit.xml
    paths:
    - integration-test/robot_results

publish-job:
  image:
    ${UPX_IMAGE_REGISTRY}docker/compose:1.30-debian-buster-python-3.7.3
  stage: publish-stage
  tags:
  - docker
  only:
  - main
  services:
  - name: ${UNIV_DOCKERHUB_CACHE}library/docker:20.10.7-dind
    alias: docker
    command:
    - "--insecure-registry=artifacts.knut.univention.de"
    - "--tls=false"
  script:
  - apt-get update
  - apt-get --assume-yes --verbose-versions --no-install-recommends install python3-sh
  - python3 ci-publish-script.py
...
